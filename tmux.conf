################################################################################
################################## General #####################################
################################################################################

# Remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# automatically renumber tmux windows
set -g renumber-windows on

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

################################################################################
############################# Themes & appearance ##############################
################################################################################

# Fix vim colors
set -g default-terminal "screen-256color"

# Use truecolors
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Snapshot file for tmuxline
if-shell "test -f ~/.config/nvim/tmuxline.conf" "source ~/.config/nvim/tmuxline.conf"

# Border color
set -g pane-active-border-style fg=blue

################################################################################
############################## Moving arround ##################################
################################################################################

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind - split-window -v

# map Vi movement keys as pane movement keys
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Avoid delay when leaving Insert mode in vim
set -s escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

################################################################################
################################ Copy mode #####################################
################################################################################

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# Hack for MacOS Sierra
#set -g default-shell $SHELL
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Enter copy mode with Ctrl-a v
bind v copy-mode

################################################################################
############################## Mouse options ###################################
################################################################################

# enable mouse & scrolling
set -g mouse on
